%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This function returns arrays of joint indices needed to evaluate the
% muscluoskeletal geometry and to impose the periodicity or symmetry
% constraints.
% Adapted from GetIndexHelper.m by Antoine Falisse
%
% Author: Lars D'Hondt
% Date: 13 Dec 2021
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function [IndexLeft,IndexRight,QsInvA,QsInvB,QdotsInvA...
    ,QdotsInvB,orderQsOpp] = GetIndexHelper_IO(jointi,IO,coord_names_fit)

Ncoord = length(coord_names_fit);

IndexLeft = zeros(1,Ncoord);
IndexRight = zeros(1,Ncoord);

for i=1:Ncoord
    name_i = coord_names_fit{i};
    idx = find(strcmp(IO.coord_namesi(1,:),name_i));
    if strcmp(name_i(end-1:end),'_r')
        IndexRight(i) = IO.coord_namesi{2,idx};
        idx_l = find(strcmp(IO.coord_namesi(1,:),[name_i(1:end-1) 'l']));
        IndexLeft(i) = IO.coord_namesi{2,idx_l};
    elseif strcmp(name_i(end-1:end),'_l')
        IndexLeft(i) = IO.coord_namesi{2,idx};
        idx_r = find(strcmp(IO.coord_namesi(1,:),[name_i(1:end-1) 'r']));
        IndexRight(i) = IO.coord_namesi{2,idx_r};
    else
        IndexLeft(i) = IO.coord_namesi{2,idx};
        IndexRight(i) = IO.coord_namesi{2,idx};
    end
end


% indexes for symmetry steps
QsInvA = [jointi.pelvis.tilt,...
    jointi.pelvis.ty,...
    jointi.hip_flex.l:jointi.trunk.ext,...
    jointi.sh_flex.l:jointi.elb.r]';
if isfield(jointi,'mtj')
    QsInvB = [jointi.pelvis.tilt,...
        jointi.pelvis.ty,...
        jointi.hip_flex.r:jointi.hip_rot.r,...
        jointi.hip_flex.l:jointi.hip_rot.l,...
        jointi.knee.r,...
        jointi.knee.l,...
        jointi.ankle.r,...
        jointi.ankle.l,...
        jointi.subt.r,...
        jointi.subt.l,...
        jointi.mtj.r,...
        jointi.mtj.l,...
        jointi.mtp.r,...
        jointi.mtp.l,...
        jointi.trunk.ext,...
        jointi.sh_flex.r:jointi.sh_rot.r,...
        jointi.sh_flex.l:jointi.sh_rot.l,...
        jointi.elb.r,...
        jointi.elb.l]';
else
    QsInvB = [jointi.pelvis.tilt,...
        jointi.pelvis.ty,...
        jointi.hip_flex.r:jointi.hip_rot.r,...
        jointi.hip_flex.l:jointi.hip_rot.l,...
        jointi.knee.r,...
        jointi.knee.l,...
        jointi.ankle.r,...
        jointi.ankle.l,...
        jointi.subt.r,...
        jointi.subt.l,...
        jointi.mtp.r,...
        jointi.mtp.l,...
        jointi.trunk.ext,...
        jointi.sh_flex.r:jointi.sh_rot.r,...
        jointi.sh_flex.l:jointi.sh_rot.l,...
        jointi.elb.r,...
        jointi.elb.l]';
end

QdotsInvA = [jointi.pelvis.tilt,...
    jointi.pelvis.tx,jointi.pelvis.ty,...
    jointi.hip_flex.l:jointi.trunk.ext,...
    jointi.sh_flex.l:jointi.elb.r]';
if isfield(jointi,'mtj')
    QdotsInvB = [jointi.pelvis.tilt,...
        jointi.pelvis.tx,jointi.pelvis.ty,...
        jointi.hip_flex.r:jointi.hip_rot.r,...
        jointi.hip_flex.l:jointi.hip_rot.l,...
        jointi.knee.r,...
        jointi.knee.l,...
        jointi.ankle.r,...
        jointi.ankle.l,...
        jointi.subt.r,...
        jointi.subt.l,...
        jointi.mtj.r,...
        jointi.mtj.l,...
        jointi.mtp.r,...
        jointi.mtp.l,...
        jointi.trunk.ext,...
        jointi.sh_flex.r:jointi.sh_rot.r,...
        jointi.sh_flex.l:jointi.sh_rot.l,...
        jointi.elb.r,...
        jointi.elb.l]';
else
    QdotsInvB = [jointi.pelvis.tilt,...
        jointi.pelvis.tx,jointi.pelvis.ty,...
        jointi.hip_flex.r:jointi.hip_rot.r,...
        jointi.hip_flex.l:jointi.hip_rot.l,...
        jointi.knee.r,...
        jointi.knee.l,...
        jointi.ankle.r,...
        jointi.ankle.l,...
        jointi.subt.r,...
        jointi.subt.l,...
        jointi.mtp.r,...
        jointi.mtp.l,...
        jointi.trunk.ext,...
        jointi.sh_flex.r:jointi.sh_rot.r,...
        jointi.sh_flex.l:jointi.sh_rot.l,...
        jointi.elb.r,...
        jointi.elb.l]';
end


orderQsOpp = [jointi.pelvis.list:jointi.pelvis.list,...
    jointi.pelvis.rot:jointi.pelvis.rot,...
    jointi.pelvis.tz:jointi.pelvis.tz,...
    jointi.trunk.ben:jointi.trunk.ben,...
    jointi.trunk.rot:jointi.trunk.rot];



end